{"version":3,"sources":["components/random-planet/random-planet.module.css","components/planet-details/planet-details.module.css","services/swapi-service.js","components/header/index.js","components/item-list/index.js","components/ErrorIndicator/index.js","components/random-planet/index.js","components/person-details/index.js","components/itemDetails/index.js","pages/peoplePage/index.js","components/planet-details/index.js","pages/pageLayout/index.js","pages/planetPage/index.js","pages/loginPage/index.js","pages/secretPage/index.js","pages/starshipPage/index.js","components/starship-details/index.js","components/app/index.js","index.js","components/itemDetails/itemDetails.module.css","pages/pageLayout/page.module.css","components/header/header.module.css","components/item-list/item-list.module.css","pages/peoplePage/peoplePage.module.css"],"names":["module","exports","SwapiService","_apiBase","getResource","url","a","fetch","result","ok","Error","status","json","getAllPeople","res","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","getPersonImage","getStarshipImage","getPlanetImage","_extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passenders","passengers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color","Header","className","styles","header_wrapper","to","header_items","React","Component","ItemList","state","itemList","getData","this","props","then","setState","arr","list_item","key","onClick","onItemSelected","items","renderItem","list_items","ErrorIndicator","RandomPlanet","swapiService","loading","error","onPlanetLoaded","onError","err","updatePlanet","Math","floor","random","catch","interval","setInterval","hasdata","random_planet","spin","PlanetView","Fragment","planet_info","planet_image","src","list_group","list_group_item","term","ItemPoint","label","value","ItemDetails","image","updateItem","prevProps","console","log","getImage","card","card_body","item_image","info_card","Children","children","child","idx","cloneElement","withRouter","history","page_wrapper","Id","push","PageLayout","left_block","left","right_block","right","PlanetPage","LoginPage","isLoggedIn","onLogin","SecretPage","StarshipPage","App","showPlanet","selectedPerson","selectedPlanet","selectedStarship","onPersonSelected","onPlanetSelected","onStarshipSelected","path","render","exact","personId","location","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.53b99a68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"random_planet\":\"random-planet_random_planet__2Rozf\",\"planet_info\":\"random-planet_planet_info__3O7ND\",\"planet_image\":\"random-planet_planet_image__2kzld\",\"spin\":\"random-planet_spin__1OWF-\",\"list_group\":\"random-planet_list_group__3rYp2\",\"ant-spin-dot-item\":\"random-planet_ant-spin-dot-item__2sPdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"planet-details_card__1EO1S\",\"card_body\":\"planet-details_card_body__1rAXg\",\"card_image\":\"planet-details_card_image__1CMAe\",\"info_card\":\"planet-details_info_card__3X3h3\",\"list_group\":\"planet-details_list_group__3V6E4\",\"list_group_item\":\"planet-details_list_group_item__3idcx\"};","export default class SwapiService {\r\n    _apiBase = 'https://swapi.co/api';\r\n\r\n    getResource= async(url) =>{\r\n        const result = await fetch(`${this._apiBase}${url}`);\r\n    \r\n        if(!result.ok) {\r\n            throw new Error(`Could not fetch ${url}, recieved ${result.status}`);\r\n            }\r\n            return await result.json();\r\n    }\r\n\r\n    getAllPeople = async () => {\r\n        const res = await this.getResource(`/people/`);\r\n        return res.results.map(this._transformPerson);\r\n    }\r\n    getPerson = async (id) => {\r\n        const person = await this.getResource(`/people/${id}/`);\r\n        return this._transformPerson(person);\r\n    }\r\n    getAllPlanets = async () => {\r\n        const res = await this.getResource(`/planets/`);\r\n        return res.results.map(this._transformPlanet);\r\n        \r\n    }\r\n    getPlanet = async (id) =>{\r\n        const planet = await this.getResource(`/planets/${id}/`);\r\n        return this._transformPlanet(planet);\r\n    }\r\n    getAllStarships = async () =>{\r\n        const res = await this.getResource(`/starships/`);\r\n        return res.results.map(this._transformStarship);\r\n    }\r\n    getStarship = async (id) => {\r\n        const starship = await this.getResource(`/starships/${id}/`);\r\n        return this._transformStarship(starship);\r\n    }\r\n    getPersonImage = (id) => {\r\n        return `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`;\r\n    }\r\n    getStarshipImage = (id) => {\r\n        return `https://starwars-visualguide.com/assets/img/starships/${id}.jpg`;\r\n    }\r\n    getPlanetImage = (id) => {\r\n        return `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`;\r\n    }\r\n\r\n    _extractId = (item) =>{\r\n        const idRegExp = /\\/([0-9]*)\\/$/;\r\n        const id = item.url.match(idRegExp)[1];\r\n        return id;\r\n    }\r\n    _transformPlanet=(planet)=> {         \r\n        return {\r\n            id: this._extractId(planet),\r\n            name: planet.name,\r\n            population: planet.population,\r\n            rotationPeriod: planet.rotation_period,\r\n            diameter: planet.diameter,\r\n        }\r\n    }\r\n    _transformStarship=(starship)=> {         \r\n        return {\r\n            id: this._extractId(starship),\r\n            name: starship.name,\r\n            model: starship.model,\r\n            manufacturer: starship.manufacturer,\r\n            costInCredits: starship.cost_in_credits,\r\n            length: starship.length,\r\n            crew: starship.crew,\r\n            passenders: starship.passengers,\r\n            cargoCapacity: starship.cargo_capacity,\r\n        }\r\n    }\r\n    _transformPerson=(person)=> {         \r\n        return {\r\n            id: this._extractId(person),\r\n            name: person.name,\r\n            gender: person.gender,\r\n            birthYear: person.birth_year,\r\n            eyeColor: person.eye_color,\r\n        }\r\n    }\r\n}\r\n\r\n// const swapi =new SwapiService();\r\n\r\n// swapi.getPlanet().then((person)=>{\r\n//     console.log(person)\r\n// })","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './header.module.css';\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={styles.header_wrapper}>\r\n                <h3>\r\n                    <Link to='/'>\r\n                        Star DB\r\n                    </Link>\r\n                </h3>\r\n                <ul className={styles.header_items}>\r\n                    <li>\r\n                        <Link to='/people/'>People</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/planets/'>Planets</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/starships/'>Starships</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/login'>Login</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/secret'>Secret</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport {Spin} from 'antd';\r\nimport styles from'./item-list.module.css';\r\n\r\nexport default class ItemList extends React.Component {    \r\n    state = {\r\n        itemList: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        const {getData}= this.props;\r\n        getData()\r\n        .then((itemList)=>{\r\n            this.setState({\r\n                itemList\r\n            });\r\n        });\r\n    }\r\n\r\n    renderItem(arr) {\r\n        return arr.map(({id,name})=>{\r\n            return (\r\n                <li \r\n                    className={styles.list_item}\r\n                    key={id}\r\n                    onClick = {()=> this.props.onItemSelected(id)}\r\n                >\r\n                    {name}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n    render() {\r\n        const {itemList} = this.state;\r\n        if (itemList.length==0) {\r\n            return <Spin/>\r\n        }\r\n        const items = this.renderItem(itemList)\r\n        return (\r\n            <ul className={styles.list_items}>\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className='error-indicator'>\r\n            <span>BOOM!</span>\r\n            <span>something has gone terrible wrong</span>\r\n            <span>(but we already sent droids to fix it)</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport ErrorIndicator from '../ErrorIndicator';\r\nimport {Spin} from 'antd';\r\nimport styles from './random-planet.module.css';\r\n\r\nimport SwapiService from '../../services/swapi-service';\r\nexport default class RandomPlanet extends React.Component {\r\n    swapiService = new SwapiService();\r\n   \r\n    state = {\r\n        planet:{},\r\n        loading: true,\r\n        error: false\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.updatePlanet();\r\n        this.interval = setInterval(this.updatePlanet, 2000);\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.updatePlanet();\r\n    //     this.interval = setInterval(this.updatePlanet, 2000);\r\n    // }\r\n\r\n    // componentWillUnMount() {\r\n    //     clearInterval(this.interval)\r\n    // }\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({planet, loading: false});\r\n    }\r\n    onError = (err)=> {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    updatePlanet =()=> {\r\n        const id =Math.floor(Math.random()*25) + 2;\r\n        this.swapiService.getPlanet(id)\r\n                // .then((planet)=>{console.log(planet)})\r\n        .then(this.onPlanetLoaded)\r\n        .catch(this.onError);\r\n    }\r\n    \r\n    render() {\r\n\r\n        const {planet, loading, error} = this.state;\r\n        \r\n        const hasdata = !(loading || error);\r\n        return (\r\n            <div className={styles.random_planet}>\r\n                  { \r\n                    hasdata ?\r\n                      <PlanetView planet={planet}/>\r\n                      :null\r\n                  }\r\n                  {\r\n                      error ?\r\n                       <ErrorIndicator/> : null\r\n                  }\r\n                  {\r\n                      loading ?\r\n                      <Spin className={styles.spin}/> : null\r\n                  }        \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst PlanetView = ({planet}) => {\r\n    const {id,name,population, rotationPeriod, diameter} = planet;\r\n    return (\r\n        <React.Fragment>\r\n            <div className={styles.planet_info}>\r\n                <img \r\n                    className={styles.planet_image} \r\n                    src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\r\n                />\r\n                <div>\r\n                    <h4>{name}</h4>\r\n                    <ul className={styles.list_group}>\r\n                        <li className={styles.list_group_item}>\r\n                            <span className={styles.term}>Population </span>\r\n                            <span>{population}</span>\r\n                        </li>\r\n                        <li className={styles.list_group_item}>\r\n                            <span className={styles.term}>Rotation Period </span>\r\n                            <span>{rotationPeriod}</span>\r\n                        </li>\r\n                        <li className={styles.list_group_item}>\r\n                            <span className={styles.term}>Diameter </span>\r\n                            <span>{diameter}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>  \r\n            </div>    \r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport './person-setails.css';\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\nexport default class PersonDetails extends React.Component {\r\n    swapiService = new SwapiService();\r\n    \r\n    state = {\r\n        person: []\r\n    };\r\n    \r\n    componentDidMount() {\r\n        this.updatePerson();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.personId!==prevProps.personId) {\r\n            this.updatePerson(); \r\n        }\r\n        console.log(this.state.person)\r\n    }\r\n    updatePerson() {\r\n        const {personId} = this.props;\r\n        if (!personId) {\r\n            return;\r\n        }\r\n        this.swapiService.getPerson(personId)\r\n        .then((person)=>{\r\n            this.setState({\r\n                person\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        if (!this.state.person) {\r\n            return <span>Select a person from the list</span>\r\n        }\r\n\r\n        const {person: {\r\n            id, name, gender, birthYear, eyeColor\r\n        }} = this.state;\r\n        return (\r\n            <div className='person-details card'>\r\n                <img className='person-image'/>\r\n                <div className='card-body'>\r\n                    <img\r\n                        className='person-image'\r\n                        src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\r\n                    />\r\n                    <div className='info-card'>\r\n                        <h4>{name}</h4>\r\n                        <ul className='list-group list-group-flush'>\r\n                            <li className='list-group-item'>\r\n                                <span className='term'>Gender </span>\r\n                                <span>{gender}</span>                        \r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <span className='term'>Birth year </span>\r\n                                <span>{birthYear}</span>                        \r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <span className='term'>Eye Color </span>\r\n                                <span>{eyeColor}</span>                        \r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport styles from './itemDetails.module.css';\r\nimport {Spin} from 'antd';\r\n\r\nconst ItemPoint = ({item, label, value}) => {\r\n    return (\r\n        <li className={styles.list_group_item}>\r\n            <span className={styles.term}>{label} </span>\r\n            <span>{item[value]}</span>                        \r\n        </li>\r\n    );\r\n}\r\nexport {ItemPoint};\r\n\r\nexport default class ItemDetails extends React.Component {\r\n    \r\n    state = {\r\n        item: null,\r\n        image: null\r\n    };\r\n    \r\n    componentDidMount() {\r\n        this.updateItem();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.id!==prevProps.id) {\r\n            this.updateItem(); \r\n        }\r\n        console.log(this.state.item)\r\n    }\r\n    updateItem() {\r\n        const {id, getData, getImage} = this.props;\r\n        if (!id) {\r\n            return;\r\n        }\r\n        getData(id)\r\n        .then((item)=>{\r\n            this.setState({\r\n                item:item,\r\n                image: getImage(id)\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        const {item, image} = this.state;\r\n        if (!this.state.item) {\r\n            return <span>Select a position from the list</span>\r\n        }\r\n        if (item.length==0) {\r\n            return <Spin/>\r\n        }\r\n\r\n        const {name} = item;\r\n        return (\r\n            <div className={styles.card}>\r\n                <div className={styles.card_body}>\r\n                    <img\r\n                        className={styles.item_image}\r\n                        src={image}\r\n                    />\r\n                    <div className={styles.info_card}>\r\n                        <h4>{name}</h4>\r\n                        <ul className={styles.list_group}>\r\n                            {\r\n                                React.Children.map(this.props.children, (child,idx)=>{\r\n                                    return React.cloneElement(child, {item});\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport styles from './peoplePage.module.css';\r\nimport ItemList from '../../components/item-list';\r\nimport PersonDetails from '../../components/person-details';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst PeoplePage = ({getData,history}) => {    \r\n        return (\r\n            <div className={styles.page_wrapper}>\r\n                <ItemList \r\n                    onItemSelected={(Id)=>{\r\n                        history.push(Id)\r\n                    }}\r\n                    getData={getData}  \r\n                />\r\n            </div>             \r\n        )\r\n};\r\nexport default withRouter(PeoplePage);\r\n","import React from 'react';\r\nimport styles from './planet-details.module.css';\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\nexport default class PlanetDetails extends React.Component {\r\n    swapiService = new SwapiService();\r\n    \r\n    state = {\r\n        planet: []\r\n    };\r\n    \r\n    componentDidMount() {\r\n        this.updatePerson();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.Id!==prevProps.Id) {\r\n            this.updatePerson(); \r\n        }\r\n        console.log(this.state.planet)\r\n    }\r\n    updatePerson() {\r\n        const {Id} = this.props;\r\n        if (!Id) {\r\n            return;\r\n        }\r\n        this.swapiService.getPlanet(Id)\r\n        .then((planet)=>{\r\n            this.setState({\r\n                planet\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        if (!this.state.planet) {\r\n            return <span>Select a planet from the list</span>\r\n        }\r\n        \r\n        const {planet: {\r\n            id, name, population, rotationPeriod, diameter\r\n        }} = this.state;\r\n        return (\r\n            <div className={styles.card}>\r\n                <div className={styles.card_body}>\r\n                    <img\r\n                        className={styles.card_image}\r\n                        src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\r\n                    />\r\n                    <div className={styles.info_card}>\r\n                        <h4>{name}</h4>\r\n                        <ul className={styles.list_group}>\r\n                            <li className={styles.list_group_item}>\r\n                                <span className={styles.term}>Population </span>\r\n                                <span>{population}</span>                        \r\n                            </li>\r\n                            <li className={styles.list_group_item}>\r\n                                <span className={styles.term}>Rotation Period </span>\r\n                                <span>{rotationPeriod}</span>                        \r\n                            </li>\r\n                            <li className={styles.list_group_item}>\r\n                                <span className={styles.term}>Diameter </span>\r\n                                <span>{diameter}</span>                        \r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport styles from './page.module.css';\r\n\r\nconst PageLayout = (props) => {\r\n        return (\r\n            <div className={styles.page_wrapper}>\r\n                <div className={styles.left_block}>\r\n                    {props.left}\r\n                </div>\r\n                <div className={styles.right_block}>\r\n                    {props.right}\r\n                </div>\r\n            </div>\r\n        )\r\n};\r\nexport default PageLayout;\r\n","import React from 'react';\r\nimport ItemList from '../../components/item-list';\r\nimport PlanetDetails from '../../components/planet-details';\r\nimport PageLayout from '../pageLayout';\r\nimport ItemDetails  from '../../components/itemDetails';\r\nimport {ItemPoint} from '../../components/itemDetails';\r\n\r\nconst PlanetPage = (props) => {\r\n    return (\r\n        <PageLayout\r\n            left={\r\n                <ItemList \r\n                    onItemSelected={props.onItemSelected}\r\n                    getData={props.getData}                    \r\n                />\r\n            }\r\n            right={\r\n                <ItemDetails\r\n                    id={props.Id}\r\n                    getData={props.getPlanet}\r\n                    getImage={props.getImage}\r\n                >\r\n                    <ItemPoint label={'Population'} value={'population'}/>\r\n                    <ItemPoint label={'Rotetion Period'} value={'rotationPeriod'}/>\r\n                    <ItemPoint label={'Diameter'} value={'diameter'}/>\r\n                </ItemDetails>\r\n            }\r\n        />            \r\n    )\r\n};\r\nexport default PlanetPage;\r\n","import React from 'react';\r\nimport {Button} from 'antd'; \r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst LoginPage = ({isLoggedIn, onLogin}) => {\r\n    if(isLoggedIn) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n        <div>\r\n            <p>Login please!</p>\r\n            <Button\r\n                onClick={onLogin}\r\n            >\r\n                Login\r\n            </Button>\r\n        </div>\r\n    )  \r\n}\r\nexport default LoginPage;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst SecretPage = ({isLoggedIn}) => {\r\n\r\n    if(isLoggedIn) {\r\n        return (            \r\n            <div className='row mb2'>\r\n                <h3>SecretPage</h3>                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <Redirect to='/login'/>\r\n};\r\nexport default SecretPage;","import React from 'react';\r\nimport ItemList from '../../components/item-list';\r\nimport StarshipDetails from '../../components/starship-details';\r\nimport PageLayout from '../pageLayout';\r\nimport ItemDetails  from '../../components/itemDetails';\r\nimport {ItemPoint} from '../../components/itemDetails';\r\n\r\nconst StarshipPage = (props) => {\r\n        return (\r\n            <PageLayout\r\n                left={\r\n                    <ItemList \r\n                        onItemSelected={props.onItemSelected}\r\n                        getData={props.getData}                    \r\n                    />\r\n                }\r\n                right={\r\n                    <ItemDetails\r\n                        id={props.Id}\r\n                        getData={props.getStarship}\r\n                        getImage={props.getImage}\r\n                    >\r\n                        <ItemPoint label={'Model'} value={'model'}/>\r\n                        <ItemPoint label={'Manufacturer'} value={'manufacturer'}/>\r\n                        <ItemPoint label={'Cost in Credits'} value={'costInCredits'}/>\r\n                        <ItemPoint label={'Length'} value={'length'}/>\r\n                        <ItemPoint label={'Crew'} value={'crew'}/>\r\n                        <ItemPoint label={'Passengers'} value={'passenders'}/>\r\n                        <ItemPoint label={'Cargo Capacity'} value={'cargoCapacity'}/>\r\n                    </ItemDetails>\r\n                }\r\n            />            \r\n        )\r\n};\r\nexport default StarshipPage;","import React from 'react';\r\n// import './planet-details.css';\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\nexport default class StarShipDetails extends React.Component {\r\n    swapiService = new SwapiService();\r\n    \r\n    state = {\r\n        starship: []\r\n    };\r\n    \r\n    componentDidMount() {\r\n        this.updatePerson();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.Id!==prevProps.Id) {\r\n            this.updatePerson(); \r\n        }\r\n        console.log(this.state.starship)\r\n    }\r\n    updatePerson() {\r\n        const {Id} = this.props;\r\n        if (!Id) {\r\n            return;\r\n        }\r\n        this.swapiService.getStarship(Id)\r\n        .then((starship)=>{\r\n            this.setState({\r\n                starship\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        if (!this.state.starship) {\r\n            return <span>Select a starship from the list</span>\r\n        }\r\n       \r\n        const {starship: {\r\n            id, name, model, manufacturer, costInCredits, length, crew, passenders, cargoCapacity\r\n        }} = this.state;\r\n        return (\r\n            <div className='person-details card'>\r\n                <img className='person-image'/>\r\n                <div className='card-body'>\r\n                    <img\r\n                        className='person-image'\r\n                        src={`https://starwars-visualguide.com/assets/img/starships/${id}.jpg`}\r\n                    />\r\n                    <div className='info-card'>\r\n                        <h4>{name}</h4>\r\n                        <ul className='list-group list-group-flush'>\r\n                            <li className='list-group-item'>\r\n                                <span className='term'>Model </span>\r\n                                <span>{model}</span>                        \r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <span className='term'>Manufacturer </span>\r\n                                <span>{manufacturer}</span>                        \r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <span className='term'>Cost in credits </span>\r\n                                <span>{costInCredits}</span>                        \r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <span className='term'>Length </span>\r\n                                <span>{length}</span>                        \r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <span className='term'>Crew </span>\r\n                                <span>{crew}</span>                        \r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <span className='term'>Passengers </span>\r\n                                <span>{passenders}</span>                        \r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <span className='term'>Capasity </span>\r\n                                <span>{cargoCapacity}</span>                        \r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\nimport './app.css';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Header from '../header';\r\nimport ItemList from '../item-list';\r\nimport RandomPlanet from '../random-planet';\r\nimport PersonDetails from '../person-details';\r\nimport ItemDetails  from '../itemDetails';\r\nimport {ItemPoint} from '../itemDetails';\r\nimport {\r\n    PeoplePage,\r\n    PlanetPage,\r\n    StarshipPage,\r\n    LoginPage,\r\n    SecretPage,\r\n    PageLayout\r\n} from '../../pages';\r\n\r\nexport default class App extends React.Component {\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        showPlanet: true,\r\n        selectedPerson: null,\r\n        selectedPlanet: null,\r\n        selectedStarship: null,\r\n        isLoggedIn: false\r\n\r\n    }\r\n    onLogin = () => {\r\n        this.setState({\r\n            isLoggedIn: true\r\n        })\r\n    }\r\n    onPersonSelected = (id) => {\r\n        this.setState({\r\n            selectedPerson:id            \r\n        })\r\n        console.log(this.state.selectedPerson)\r\n    }\r\n    onPlanetSelected = (id) => {\r\n        this.setState({\r\n            selectedPlanet:id            \r\n        })\r\n        console.log(this.state.selectedPlanet)\r\n    }\r\n    onStarshipSelected = (id) => {\r\n        this.setState({\r\n            selectedStarship:id            \r\n        })\r\n        console.log(this.state.selectedStarship)\r\n    }\r\n    \r\n    render() {\r\n        const {isLoggedIn} = this.state;\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Header/>\r\n                    <RandomPlanet/>\r\n\r\n                    <Switch>\r\n                        <Route path='/' render={()=><h2>Welcom to StarDB</h2>} exact/>\r\n                        <Route path='/people' exact>\r\n                            <PeoplePage\r\n                                onItemSelected={this.onPersonSelected}\r\n                                personId={this.state.selectedPerson}\r\n                                getData={this.swapiService.getAllPeople}\r\n                            />\r\n                        </Route>\r\n                        <Route path='/people/:id' render={({match, location, history})=>{\r\n                            const {id} = match.params;\r\n                            console.log(match, location, history);\r\n                            return (\r\n                                <ItemDetails\r\n                                    id={id} \r\n                                    getData={this.swapiService.getPerson}\r\n                                    getImage={this.swapiService.getPersonImage}\r\n                                >\r\n                                    <ItemPoint label={'Gender'} value={'gender'}/>\r\n                                    <ItemPoint label={'Birth Year'} value={'birthYear'}/>\r\n                                    <ItemPoint label={'Eye Color'} value={'eyeColor'}/>\r\n                                </ItemDetails>)\r\n                        }}/>\r\n                        <Route path='/planets/:id?'>\r\n                            <PlanetPage\r\n                                onItemSelected={this.onPlanetSelected}\r\n                                Id={this.state.selectedPlanet}\r\n                                getData={this.swapiService.getAllPlanets}\r\n                                getPlanet={this.swapiService.getPlanet}\r\n                                getImage={this.swapiService.getPlanetImage}\r\n                            />\r\n                        </Route>\r\n                        <Route path='/starships/:id?'>\r\n                            <StarshipPage\r\n                                onItemSelected={this.onStarshipSelected}\r\n                                Id={this.state.selectedStarship}\r\n                                getData={this.swapiService.getAllStarships}\r\n                                getStarship={this.swapiService.getStarship}\r\n                                getImage={this.swapiService.getStarshipImage}\r\n                            />    \r\n                        </Route>  \r\n                        <Route path='/login' render = {()=>\r\n                            <LoginPage\r\n                                isLoggedIn={this.state.isLoggedIn}\r\n                                onLogin={this.onLogin}\r\n                            />}/> \r\n                        <Route path='/secret' render = {()=><SecretPage isLoggedIn={isLoggedIn}/>}/>\r\n                        <Route render={()=><h2>Page not found</h2>}/>\r\n                        {/* <Redirect to='/'/> */}\r\n                    </Switch>          \r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport './main.css';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n  );","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"itemDetails_card__1GhGZ\",\"card_body\":\"itemDetails_card_body__1ZRbr\",\"info_card\":\"itemDetails_info_card__280A-\",\"item_image\":\"itemDetails_item_image__x4cIb\",\"list_group\":\"itemDetails_list_group__3ERp7\",\"list_group_item\":\"itemDetails_list_group_item__QG8kJ\",\"term\":\"itemDetails_term__37GJO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_wrapper\":\"page_page_wrapper__8Gv2E\",\"left_block\":\"page_left_block__1VtPw\",\"right_block\":\"page_right_block__10xLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_wrapper\":\"header_header_wrapper__3bUwY\",\"header_items\":\"header_header_items__3s7yz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_items\":\"item-list_list_items__3sjCw\",\"list_item\":\"item-list_list_item__2dayY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_wrapper\":\"peoplePage_page_wrapper__3y8Yl\"};"],"sourceRoot":""}